name: Build
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      # Paso 1: Checkout del código
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Desactivar clonaciones superficiales para obtener el historial completo

      # Paso 2: Configurar JDK 21 (o el que estés usando)
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # Paso 3: Cache de dependencias de Maven
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # Paso 4: Construcción del proyecto
      - name: Build
        run: mvn clean package -DskipTests  # Asegúrate de que el .jar sea generado en target/

      # Paso 5: Subir el archivo JAR como Release en GitHub
      - name: Upload JAR as a GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: target/*.jar  # Asegúrate de que el archivo generado esté en 'target/'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # GitHub Token para autenticar la acción
